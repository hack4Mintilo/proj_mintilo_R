rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc <- as.character(top_sites_table$site_desc)
top_sites_table$daily_time_on_site <- gsub(pattern = ":", replacement = ".",
top_sites_table$daily_time_on_site)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = c("\n", "Less"), replacement = "",
top_sites_table$site_desc)
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n" || "Less", replacement = "",
top_sites_table$site_desc)
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n || Less", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n | Less", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "[\n, Less]", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n | Less", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n | Less\n", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- sub(pattern = "\n | Less\n", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- sub(pattern = "\n | Less", replacement = "",
top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
top_sites_table$rank <- as.numeric(top_sites_table$rank)
# top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "",
#                                   top_sites_table$site_desc)
top_sites_table$site_desc <- replace(x = top_sites_table$site_desc,
list = top_sites_table$site_desc %in% c("\n", "Less"),
values = "")
library(stringr)   ## used for multiple pattern replacement
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
# top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "",
#                                   top_sites_table$site_desc)
top_sites_table$site_desc <- str_replace_all(string = top_sites_table$site_desc, pattern = c("\n", "Less"), replacement = "")
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc
top_sites_table$site_desc <- ifelse(top_sites_table$site_desc == "", NA, top_sites_table$site_desc)
top_sites_table$site_desc
top_sites_table$site_desc <- as.character(top_sites_table$site_desc)
top_sites_table$site_desc
top_sites_table$site_desc <- ifelse(top_sites_table$site_desc == " ", NA, top_sites_table$site_desc)
top_sites_table$site_desc
top_sites_table$site_desc <- apply(top_sites, 2, function() {
gsub(pattern = " ", replacement = NA, top_sites_table$site_desc)
})
top_sites_table <- apply(top_sites, 2, function(x) {
gsub(pattern = " ", replacement = NA, x)
})
top_sites_table$site_desc[top_sites_table$site_desc == " "] <- NA
top_sites_table$site_desc
top_sites_table$site_desc[top_sites_table$site_desc == ""] <- NA
top_sites_table$site_desc
top_sites_table$site_desc <- gsub(pattern = " ", replacement = NA, top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "", replacement = NA, top_sites_table$site_desc)
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
is.na(top_sites_table$site_desc) <- top_sites_table$site_desc == ""
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- as.character(top_sites_table$site_desc)
is.na(top_sites_table$site_desc) <- top_sites_table$site_desc == ""
top_sites_table$site_desc
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- as.character(top_sites_table$site_desc)
top_sites_table$site_desc <- sub(pattern = "^$", replacement = "NA", top_sites_table$site_desc)
top_sites_table$site_desc
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
## -- set current working directory
user <- "workuhm"
cwd <- paste("/Users/", user, "/Desktop/Data Science/Data Mining with R/proj_mintilo_R/proj_alexa",
sep = "")
setwd(cwd)
## -- start scraping ALEXA
library(rvest)
## country
country <- "ET"
## url
url <- paste("http://www.alexa.com/topsites/countries/", country, sep = "")
## load the page
top_sites <- read_html(url)
## get attributes
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site_desc <- top_sites%>%html_nodes(".DescriptionCell .description")%>%html_text()
daily_time_on_site <- top_sites%>%html_nodes(".DescriptionCell+ .right p")%>%html_text()
daily_pageviews_per_visitor <- top_sites%>%html_nodes(".right:nth-child(4) p")%>%html_text()
percent_of_traffic_from_search <- top_sites%>%html_nodes(".right:nth-child(5) p")%>%html_text()
total_sites_linking_in <- top_sites%>%html_nodes(".right:nth-child(6) p")%>%html_text()
top_sites_table <- data.frame(rank=rank, site=site, site_desc,
daily_time_on_site, daily_pageviews_per_visitor,
percent_of_traffic_from_search, total_sites_linking_in)
## -- pre-processing data
# library(stringr)   ## used for multiple pattern replacement
top_sites_table$rank <- as.numeric(top_sites_table$rank)
top_sites_table$site_desc <- gsub(pattern = "\n", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- gsub(pattern = "Less", replacement = "", top_sites_table$site_desc)
top_sites_table$site_desc <- as.character(top_sites_table$site_desc)
# top_sites_table$site_desc <- sub(pattern = "^$", replacement = "NA", top_sites_table$site_desc)
# top_sites_table$site_desc
# top_sites_table$site_desc <- str_replace_all(string = top_sites_table$site_desc, pattern = c("\n", "Less"), replacement = "")
top_sites_table$daily_time_on_site <- gsub(pattern = ":", replacement = ".",
top_sites_table$daily_time_on_site)
top_sites_table$daily_time_on_site <- as.numeric(top_sites_table$daily_time_on_site)
## export data
write.csv(x = top_sites_table, file = "./top_sites_by_country.csv", sep = ";")
write.csv(x = top_sites_table, file = "./top_sites_by_country.csv", row.names = FALSE, na = "")
top_sites_table <- top_sites_table[order(top_sites_table$rank), ]
write.csv(x = top_sites_table, file = "./top_sites_by_country.csv", row.names = FALSE, na = "")
write.csv(x = top_sites_table, file = "./top_sites_by_country.csv",
row.names = FALSE, col.names = TRUE, na = "")
write.csv(x = top_sites_table, file = "./top_sites_by_country.csv",
row.names = FALSE, header = TRUE, na = "")
library(xlsx)
install.packages("xlsx")
library(xlsx)
write.xlsx(x = top_sites_table, file = "./top_sites_by_country.xlsx", sheetName = "TopSitesByCountry",
row.names = FALSE, col.names = TRUE)
country <- "ET"
url <- paste("http://www.alexa.com/topsites/countries/", country, sep = "")
url
top_sites <- read_html(url)
rank <- top_sites%>%html_nodes("div div .number")%>%html_text()
rank
site <- top_sites%>%html_nodes("p a")%>%html_text()
site
site <- top_sites%>%html_nodes(".DescriptionCell p a")%>%html_text()
site
install.packages("mapdata")
library(mapdata)
ls("package:mapdata")
?worldHires
data("worldHiresMapEnv")
?worldHiresMapEnv
head(worldHiresMapEnv)
url_world_region <- "http://www.internetworldstats.com/list1.htm#geo"
world_region <- read_html(url_world_region)
continent <- world_region%>%html_nodes("td blockquote ul")%>%html_text()
continent <- gsub("\n", "", continent)
continent <- world_region%>%html_nodes("td blockquote ul")%>%html_text()
continent <- gsub("\n", " ", continent)
continent
install.packages("jsonlite")
library(jsonlite)
url_country_json <- "https://restcountries.eu/rest/v2/all"
counry_json <- read_html(url_country_json)
class(counry_json)
head(counry_json)
counry_json[1:5]
counry_json <- read_json(url_country_json)
class(counry_json)
country_json <- read_json(url_country_json)
country_json[[1]]
country_json[[1]][1:5]
country_all <- fromJSON(country_json)
country_all <- fromJSON(url_country_json)
head(country_all)
country_ET <- country_all[country_all$alpha2Code == "ET", ]
edit(country_ET)
country_ET
names(country_ET)
library(xlsx)
write.xlsx(x = country_all, file = "./countrcountry_all.xlsx", sheetName = "countryAll",
row.names = FALSE, col.names = TRUE)
getwd()
write.xlsx(x = country_all, file = "./country_all.xlsx", sheetName = "countryAll",
row.names = FALSE, col.names = TRUE)
qwe <- country_all[!complete.cases(country_all), ]
dim(country_all)
head(country_all)
library(xlsx)
write.xlsx(x = as.data.frame(country_all), file = "./country_all.xlsx", sheetName = "countryAll",
row.names = FALSE, col.names = TRUE)
write.xlsx(x = as.data.frame(country_all), file = "./country_all.xlsx", sheetName = "countryAll",
row.names = FALSE, col.names = TRUE,
append = TRUE)
names(country_all)
country_ET
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
head(country_all_filter)
library(xlsx)
write.xlsx(x = country_all_filter, file = "./country_all_filter.xlsx", sheetName = "countryAll_filter",
row.names = FALSE, col.names = TRUE)
class(country_all_filter)
country_all_filter <- as.data.frame(country_all_filter, na.strings=c("", "NA"))
head(country_all_filter)
taile(country_all_filter)
tail(country_all_filter)
edit(head(country_all_filter))
apply(country_all_filter, 2, function(x) gsub("^$|^ $", NA, x))
country_all <- fromJSON(url_country_json)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
country_all_filter[country_all_filter == ""] <- NA
head(country_all_filter)
?fromJSON
country_all <- fromJSON(url_country_json, na = NA)
country_all <- fromJSON(url_country_json, flatten = TRUE)
head(country_all_filter)
country_all <- fromJSON(url_country_json, flatten = TRUE, nullValue = NA)
class(country_all_filter)
sapply(country_all_filter, class)
sapply(country_all, class)
sapply(country_all_filter, class)   ## check class type
country_all_filter$borders <- as.character(country_all_filter$borders)
sapply(country_all_filter, class)   ## check class type
head(country_all_filter)
country_all <- fromJSON(url_country_json, flatten = TRUE, nullValue = NA)
sapply(country_all, class)   ## check class type of all variable
country_all <- fromJSON(url_country_json, flatten = TRUE)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
sapply(country_all_filter, class)   ## check class type
country_all_filter$borders <- unlist(country_all_filter$borders)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
country_all_filter$borders <- as.character(unlist(country_all_filter$borders))
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
sapply(country_all_filter, class)   ## check class type
country_all_filter$borders <- t(unlist(country_all_filter$borders))
country_all <- fromJSON(url_country_json)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
country_all_filter$borders <- unlist(country_all_filter$borders)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
str(country_all_filter)
borders <- country_all_filter$borders
class(borders)
borders[[1]]
library(tidyr)
install.packages("tidyr")
library(tidyr)
country_all <- fromJSON(url_country_json)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
unnest(data = country_all_filter, borders)
country_all_filter <- country_all[ , c("name", "alpha2Code", "alpha3Code", "capital",
"region", "subregion", "borders")]
country_all_filter <- unnest(data = country_all_filter, borders)
dim(country_all_filter)
country_all_filter[country_all_filter$alpha2Code=="ET", ]
library(xlsx)
write.xlsx(x = country_all_filter, file = "./country_all_filter.xlsx", sheetName = "countryAll_filter",
row.names = FALSE, col.names = TRUE)
country_ET <- country_all_filter[country_all_filter$alpha2Code == "ET", ]
country_ET
load("./talk2Alex_src.R")
load("./talk2Alexa_src.R")
load("./scrapAlexa_src.R")
source("./scrapAlexa_src.R")
scrapAlexa(country = ET, is_exp = TRUE)
scrapAlexa(country = "ET", is_exp = TRUE)
source("./scrapAlexa_src.R")
scrapAlexa(country = "ET", region = "Africa", is_exp = TRUE)
source("./scrapAlexa_src.R")
scrapAlexa(country = "ET", is_region = TRUE, region = "Africa", is_exp = TRUE)
scrapAlexa(country = "ET", is_region = TRUE, region = "Africa", is_exp = TRUE)
source("./scrapAlexa_src.R")
scrapAlexa(country = "ET", is_region = TRUE, region = "Africa", is_exp = TRUE)
scrapAlexa(country = "Ethiopia", is_region = TRUE, region = "Africa", is_exp = TRUE)
country_ET
scrapAlexa(country = "Eritria", is_exp = TRUE)
scrapAlexa(country = "Eritrea", is_region = TRUE, region = "Africa", is_exp = TRUE)
borders_ET <- c("DJ", "KE", "SO", "SD")     ## no info for Eritrea (ER)
source("./scrapAlexa_src.R")
scrapAlexa(country = "Ethiopia", is_region = TRUE, region = "Africa", is_exp = TRUE)
border="ET"
scrapAlexa(country = border, is_regional = FALSE, is_exp = TRUE)
for (border in borders_ET) {
scrapAlexa(country = border, is_regional = FALSE, is_exp = TRUE)
}
country_all_filter[country_all_filter$alpha3Code == "ETH", borders]
names(country_all_filter)
country_all_filter[country_all_filter$alpha3Code == "ETH", ]
borders <- country_all_filter[country_all_filter$alpha3Code == "ETH", ]$borders
borders
borders <- substr(country_all_filter[country_all_filter$alpha3Code == "ETH", ]$borders,
start = 1:2)
borders <- substr(country_all_filter[country_all_filter$alpha3Code == "ETH", ]$borders,
start = 1, stop = 2)
borders
source("./scrapAlexa_src.R")
borders <- substr(country_all_filter[country_all_filter$alpha3Code == "ETH", ]$borders,
start = 1, stop = 2)
for (border in borders) {
scrapAlexa(country = border, is_regional = FALSE, is_exp = TRUE)
}
